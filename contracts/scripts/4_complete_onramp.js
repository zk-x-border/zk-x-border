// We require the Hardhat Runtime Environment explicitly here. This is optional
// but useful for running the script in a standalone fashion through `node <script>`.
//
// You can also run a script with `npx hardhat run <script>`. If you do that, Hardhat
// will compile your contracts, add the Hardhat Runtime Environment's members to the
// global scope, and execute the script.
const hre = require("hardhat");
const { BigNumber } = hre.ethers;

// Lay out the const contrat instances
const USDC = "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174";
const USDCABI = require("../abis/USDC.json");

const EuroPool = "0xfBB2AE302A460730685f74F262D1e3256033d625"; // To fill in
const USDCPoolABI = require("../abis/EuropePool.json");

const ORDER_ID = 1;
const EMAIL_HASH = "0";

// These inputs are hard-coded and pulled in from the Relayer's Proof
const a = ["0x2161c9033287a1a0770e664fb12bacfb5ea0360fdb2a0b52a7dc3e22b01e97ea", "0x2b69551363c03f2ed145ede80b3465f38ddc416f38954989076dc28e3df9767c"];
const b = [["0x30012c7fa027e5c31aba809264e48ef98d353f222ecc88fc7d4b979fc887901a", "0x2b2c94ce0990560207680836e464f0d0376bf85497f6c6ac273cab851588e202"], ["0x171c365446861a00f1d4fa98c041db44c05475b6563f2f03b39da4d1fdec27b2", "0x181a5061dae966acd2e4ff88c24ce043444bf5a5a1435b8d1dd470d3a210fb1c"]];
const c = ["0x13b482e67e8ed96fe8a2bd6f947580d2ef7f9b6cf97175ea99131371fb5c8e9f", "0x2baf66fa65f9253764aaa67560a350a17852002ae1f3d523465030fa1570a5bf"];
const SIGNALS = [
    "0x0000000000000000000000000000000000000000000000000000003030302c32",
    "0x0000000000000000000000000000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000000000000000034303030355450",
    "0x0000000000000000000000000000000000000000000000000058580a0d3d5835",
    "0x0000000000000000000000000000000000000000000000000058585858585858",
    "0x0000000000000000000000000000000000000000000000000033343231585858",
    "0x0000000000000000000000000000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000001a39233215a1dac06b9c12b093d0c19",
    "0x000000000000000000000000000000000001eb0a67fb00ee04ac19e10bdd1780",
    "0x0000000000000000000000000000000000000000000000000000000000003c50",
    "0x0000000000000000000000000000000001058481b16c0c6bc68b612881d69109",
    "0x00000000000000000000000000000000017fd23efa54659bcfc805b3d06649d6",
    "0x000000000000000000000000000000000100aa2baa3c1b6ef87468ec5bc14f73",
    "0x0000000000000000000000000000000001c43bddf64aeafd7faffc39c2911ba5",
    "0x00000000000000000000000000000000016ad3c248dd353b192e38cccf34a01f",
    "0x0000000000000000000000000000000001d80b82a4f6cead025d04200087be3f",
    "0x0000000000000000000000000000000001b87939bd34a27fa069022ecf22cd31",
    "0x0000000000000000000000000000000001d73d3916dbbf584bc426b675efa1f4",
    "0x00000000000000000000000000000000000000000000000000ac4c64b591c821",
    "0x0000000000000000000000000000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000000000000000000000000000001"
];

const PROOF = [a, b, c];


async function main() {
    console.log("EuroPool.completeOnRampOrder of order ID 1");
    const usdcPoolContract = await ethers.getContractAt(USDCPoolABI.abi, EuroPool);

    const [deployer] = await hre.ethers.getSigners();

    const ONE_GWEI = BigNumber.from(1000000000);
    const feeData = await hre.ethers.provider.getFeeData();
    const deployGasConfig = {
        gasPrice: feeData.gasPrice.add(ONE_GWEI.mul(3)),
        gasLimit: 1000000
    }

    const receipt = await usdcPoolContract.completeOnRampOrder(
        PROOF,
        SIGNALS,
        deployGasConfig
    );

    console.log(`Submitted EuroPool completeOnRampOrder: ${receipt.transactionHash}`);
}

// We recommend this pattern to be able to use async/await everywhere
// and properly handle errors.
main().catch((error) => {
    console.error(error);
    process.exitCode = 1;
});
